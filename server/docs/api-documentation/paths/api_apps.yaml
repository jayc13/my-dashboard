get:
  operationId: get-all-apps
  summary: Get all applications
  description: |
    Retrieve a list of all registered applications/projects in the system.
    
    Returns basic application information including name, code, and monitoring status.
  tags:
    - Applications
  security:
    - ApiKeyAuth: []
  responses:
    '200':
      description: Applications retrieved successfully
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../schemas/Application.yaml'
          examples:
            success:
              summary: List of applications
              value:
                - id: 1
                  name: "My Web App"
                  code: "my-web-app"
                  pipelineUrl: "https://app.circleci.com/pipelines/github/myorg/my-web-app"
                  e2eTriggerConfiguration: "branch:main,schedule:daily"
                  watching: true
                - id: 2
                  name: "Mobile App"
                  code: "mobile-app"
                  pipelineUrl: "https://app.circleci.com/pipelines/github/myorg/mobile-app"
                  e2eTriggerConfiguration: "branch:main"
                  watching: false
    '401':
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponse.yaml'
          example:
            success: false
            error:
              message: "Invalid or missing API key"
              code: "UNAUTHORIZED"
              statusCode: 401
              path: "/api/apps"
              method: "GET"
              timestamp: "2025-10-04T12:34:56.789Z"
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponse.yaml'
          example:
            success: false
            error:
              message: "Failed to fetch apps"
              code: "INTERNAL_ERROR"
              statusCode: 500
              path: "/api/apps"
              method: "GET"
              timestamp: "2025-10-04T12:34:56.789Z"

post:
  operationId: create-app
  summary: Create a new application
  description: |
    Register a new application/project in the system.
    
    Creates a new application record with the provided configuration.
  tags:
    - Applications
  security:
    - ApiKeyAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - code
            - watching
          properties:
            name:
              type: string
              description: Human-readable name of the application
              example: "My New App"
              minLength: 1
              maxLength: 255
            code:
              type: string
              description: Unique code identifier for the application
              example: "my-new-app"
              pattern: "^[a-z0-9-]+$"
              minLength: 1
              maxLength: 100
            pipelineUrl:
              type: string
              format: uri
              description: URL to the CI/CD pipeline for this application
              example: "https://app.circleci.com/pipelines/github/myorg/my-new-app"
            e2eTriggerConfiguration:
              type: string
              description: Configuration for triggering E2E tests
              example: "branch:main,schedule:daily"
            watching:
              type: boolean
              description: Whether this application should be actively monitored
              example: true
        examples:
          create_app:
            summary: Create new application
            value:
              name: "My New App"
              code: "my-new-app"
              pipelineUrl: "https://app.circleci.com/pipelines/github/myorg/my-new-app"
              e2eTriggerConfiguration: '{"branch":"main","schedule":"daily"}'
              watching: true
  responses:
    '201':
      description: Application created successfully
      content:
        application/json:
          schema:
            $ref: '../schemas/Application.yaml'
          example:
            id: 3
            name: "My New App"
            code: "my-new-app"
            pipelineUrl: "https://app.circleci.com/pipelines/github/myorg/my-new-app"
            e2eTriggerConfiguration: '{"branch":"main","schedule":"daily"}'
            watching: true
    '400':
      description: Bad request - Invalid input data
      content:
        application/json:
          schema:
            $ref: '../schemas/ValidationError.yaml'
          examples:
            missing_fields:
              summary: Missing required fields
              value:
                success: false
                error:
                  message: "Validation failed"
                  code: "VALIDATION_ERROR"
                  statusCode: 400
                  details:
                    name: "Name is required"
                    code: "Code is required"
                  path: "/api/apps"
                  method: "POST"
                  timestamp: "2025-10-04T12:34:56.789Z"
            invalid_code:
              summary: Invalid application code format
              value:
                success: false
                error:
                  message: "Validation failed"
                  code: "VALIDATION_ERROR"
                  statusCode: 400
                  details:
                    code: "Code must contain only lowercase letters, numbers, and hyphens"
                  path: "/api/apps"
                  method: "POST"
                  timestamp: "2025-10-04T12:34:56.789Z"
    '401':
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponse.yaml'
          example:
            success: false
            error:
              message: "Invalid or missing API key"
              code: "UNAUTHORIZED"
              statusCode: 401
              path: "/api/apps"
              method: "POST"
              timestamp: "2025-10-04T12:34:56.789Z"
    '409':
      description: Conflict - Application code already exists
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponse.yaml'
          example:
            success: false
            error:
              message: "App code must be unique"
              code: "CONFLICT"
              statusCode: 409
              path: "/api/apps"
              method: "POST"
              timestamp: "2025-10-04T12:34:56.789Z"
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponse.yaml'
          example:
            success: false
            error:
              message: "Failed to create application"
              code: "INTERNAL_ERROR"
              statusCode: 500
              path: "/api/apps"
              method: "POST"
              timestamp: "2025-10-04T12:34:56.789Z"
