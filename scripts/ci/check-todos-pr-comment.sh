#!/bin/bash

# TODO/FIXME PR Comment Script
# Runs check-todos.sh and posts results as a PR comment
# Usage: check-todos-pr-comment.sh

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Required environment variables
GITHUB_TOKEN="${GITHUB_TOKEN}"
GITHUB_REPOSITORY="${GITHUB_REPOSITORY}"
PR_NUMBER="${PR_NUMBER}"

# Get the script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Temporary files for collecting results
TODO_FILE=$(mktemp)
FIXME_FILE=$(mktemp)
NEW_TODO_FILE=$(mktemp)
NEW_FIXME_FILE=$(mktemp)
COMPLEX_TODO_FILE=$(mktemp)

# Cleanup function
cleanup() {
    rm -f "$TODO_FILE" "$FIXME_FILE" "$NEW_TODO_FILE" "$NEW_FIXME_FILE" "$COMPLEX_TODO_FILE"
}
trap cleanup EXIT

# Function to check if we're in a git repository
check_git_repo() {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        return 1
    fi
    return 0
}

# Function to check if main branch exists
check_main_branch() {
    if ! git show-ref --verify --quiet refs/heads/main && ! git show-ref --verify --quiet refs/remotes/origin/main; then
        return 1
    fi
    return 0
}

echo -e "${CYAN}üîç Running TODO/FIXME analysis...${NC}"

# Change to project root
cd "$PROJECT_ROOT"

# Run check-todos.sh and capture its output
CHECK_TODOS_OUTPUT=$(bash "$PROJECT_ROOT/scripts/check-todos.sh" 2>&1 || true)

# Strip ANSI color codes from output for parsing
CLEAN_OUTPUT=$(echo "$CHECK_TODOS_OUTPUT" | sed 's/\x1b\[[0-9;]*m//g')

# Parse the output to extract key metrics
TOTAL_TODOS=$(echo "$CLEAN_OUTPUT" | grep "Total TODO comments found:" | grep -o "[0-9][0-9]*" | head -1)
TOTAL_FIXMES=$(echo "$CLEAN_OUTPUT" | grep "Total FIXME comments found:" | grep -o "[0-9][0-9]*" | head -1)
NEW_TODOS=$(echo "$CLEAN_OUTPUT" | grep "New TODO comments in this PR:" | grep -o "[0-9][0-9]*" | head -1)
NEW_FIXMES=$(echo "$CLEAN_OUTPUT" | grep "New FIXME comments in this PR:" | grep -o "[0-9][0-9]*" | head -1)
COMPLEX_TODOS=$(echo "$CLEAN_OUTPUT" | grep "Complex TODOs (consider creating issues):" | grep -o "[0-9][0-9]*" | head -1)

# Set defaults if empty
TOTAL_TODOS=${TOTAL_TODOS:-0}
TOTAL_FIXMES=${TOTAL_FIXMES:-0}
NEW_TODOS=${NEW_TODOS:-0}
NEW_FIXMES=${NEW_FIXMES:-0}
COMPLEX_TODOS=${COMPLEX_TODOS:-0}

# Determine overall status
if [ "$NEW_FIXMES" -gt 0 ]; then
    OVERALL_STATUS="‚ö†Ô∏è Warning"
    STATUS_COLOR="warning"
elif [ "$NEW_TODOS" -gt 5 ]; then
    OVERALL_STATUS="‚ö†Ô∏è Attention Needed"
    STATUS_COLOR="warning"
else
    OVERALL_STATUS="‚úÖ Looks Good"
    STATUS_COLOR="success"
fi

# Build the PR comment body
COMMENT_BODY="## üìù TODO/FIXME Comment Analysis

### ${OVERALL_STATUS}

"

# Add summary table
COMMENT_BODY+="| Metric | Count |
|--------|-------|
| **Total TODO Comments** | ${TOTAL_TODOS} |
| **Total FIXME Comments** | ${TOTAL_FIXMES} |"

if check_git_repo && check_main_branch; then
    COMMENT_BODY+="
| **New TODOs in this PR** | ${NEW_TODOS} |
| **New FIXMEs in this PR** | ${NEW_FIXMES} |"
fi

COMMENT_BODY+="
| **Complex TODOs** | ${COMPLEX_TODOS} |

"

# Add recommendations based on the metrics
if [ "$NEW_FIXMES" -gt 0 ]; then
    COMMENT_BODY+="### ‚ö†Ô∏è Warnings

- **${NEW_FIXMES} new FIXME comment(s)** introduced in this PR
- Consider addressing these issues before merging

"
fi

if [ "$NEW_TODOS" -gt 5 ]; then
    COMMENT_BODY+="### üìù Notes

- **${NEW_TODOS} new TODO comment(s)** introduced in this PR
- Consider creating GitHub issues for complex TODOs

"
fi

if [ "$TOTAL_FIXMES" -gt 10 ]; then
    COMMENT_BODY+="### üö® Codebase Health

- High number of FIXME comments (${TOTAL_FIXMES}) in codebase
- Consider prioritizing these fixes

"
fi

if [ "$TOTAL_TODOS" -gt 50 ]; then
    if [ "$TOTAL_FIXMES" -le 10 ]; then
        COMMENT_BODY+="### üö® Codebase Health

"
    fi
    COMMENT_BODY+="- High number of TODO comments (${TOTAL_TODOS}) in codebase
- Consider creating a cleanup sprint or GitHub issues

"
fi

if [ "$COMPLEX_TODOS" -gt 0 ]; then
    COMMENT_BODY+="### üí° Recommendations

- **${COMPLEX_TODOS} complex TODO(s)** detected that might warrant GitHub issues
- These TODOs involve significant work like refactoring, optimization, or architectural changes

"
fi

# Add details section with collapsible content
COMMENT_BODY+="<details>
<summary>üìä View Detailed Analysis</summary>

\`\`\`
${CHECK_TODOS_OUTPUT}
\`\`\`

</details>

---
*This comment was automatically generated by the TODO/FIXME analysis workflow.*
*Only uppercase TODO and FIXME comments are detected (case-sensitive).*"

# Post the comment if we have the required environment variables
if [[ -n "$GITHUB_TOKEN" && -n "$GITHUB_REPOSITORY" && -n "$PR_NUMBER" ]]; then
    echo -e "${CYAN}üí¨ Posting TODO/FIXME analysis to PR...${NC}"

    # Call pr-comment.sh with the analysis
    COMMENT_ID="todo-fixme-analysis"
    bash "$SCRIPT_DIR/pr-comment.sh" "$COMMENT_ID" "$COMMENT_BODY"
    
    echo -e "${GREEN}‚úÖ Successfully posted TODO/FIXME analysis comment!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Missing environment variables for PR commenting. Skipping comment posting.${NC}"
    echo -e "${BLUE}Generated comment content:${NC}"
    echo "$COMMENT_BODY"
fi

