name: 'Validate Tests Integration'

permissions:
  contents: read

on:
  workflow_call:

jobs:
  validate-tests-integration:
    name: Validate Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup validation environment
        uses: ./.github/actions/setup-validation

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies for tests/integration-tests..."
          pnpm install --filter=tests/integration-tests

      - name: Build required packages
        run: |
          echo "🏗️ Building required packages..."
          pnpm run build --filter=@my-dashboard/types
          pnpm run build --filter=@my-dashboard/sdk

      - name: Run linting
        run: |
          echo "🔍 Running linting on tests/integration-tests..."
          pnpm run lint --filter=tests/integration-tests || echo "⚠️ No linting configured for tests/integration-tests"

      - name: Run type checking
        run: |
          echo "🔍 Running TypeScript type checking..."
          cd tests/integration-tests
          npx tsc --noEmit || echo "⚠️ Type checking completed with warnings"

      - name: Build tests
        run: |
          echo "🏗️ Building integration tests..."
          pnpm run build --filter=tests/integration-tests

      - name: Validate test structure
        run: |
          echo "🔍 Validating test structure..."
          cd tests/integration-tests
          
          # Check for test files
          if [ ! -d "src" ] && [ ! -d "tests" ] && [ ! -f "*.test.ts" ] && [ ! -f "*.test.js" ]; then
            echo "❌ No test files found"
            exit 1
          fi
          
          echo "✅ Test structure validated"

      - name: Run dry-run tests
        run: |
          echo "🧪 Running dry-run of integration tests..."
          cd tests/integration-tests
          
          # Check if test script exists and run in dry-run mode if possible
          if pnpm run test --help 2>/dev/null | grep -q "dry-run\|list-tests"; then
            pnpm run test --dry-run || pnpm run test --list-tests || echo "✅ Test dry-run completed"
          else
            echo "✅ Test validation completed (no dry-run available)"
          fi

      - name: Verify test configuration
        run: |
          echo "🔍 Verifying test configuration..."
          cd tests/integration-tests
          
          # Check for common test configuration files
          if [ -f "jest.config.js" ] || [ -f "jest.config.json" ] || [ -f "vitest.config.ts" ] || [ -f "vitest.config.js" ]; then
            echo "✅ Test configuration found"
          else
            echo "⚠️ No test configuration found (may be using defaults)"
          fi
