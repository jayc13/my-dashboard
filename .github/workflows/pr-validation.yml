name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]

# Cancel in-progress runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  # Job 1: Basic validation and setup
  basic-validation:
    name: Init
    if: github.event.pull_request.draft == false
    uses: ./.github/workflows/basic-validation.yml
    with:
      pr-title: ${{ github.event.pull_request.title }}
      base-sha: ${{ github.event.pull_request.base.sha }}
      head-sha: ${{ github.event.pull_request.head.sha }}
      pr-number: ${{ github.event.pull_request.number }}

  # Job 2: Client validation
  validate-client:
    name: Client
    needs: basic-validation
    if: needs.basic-validation.outputs.client-changed == 'true' || needs.basic-validation.outputs.github-changed == 'true'
    uses: ./.github/workflows/validate-client.yml

  # Job 3: Server validation
  validate-server:
    name: Server
    needs: basic-validation
    if: needs.basic-validation.outputs.server-changed == 'true' || needs.basic-validation.outputs.github-changed == 'true'
    uses: ./.github/workflows/validate-server.yml

  # Job 4: Cron validation
  validate-cron:
    name: Cron
    needs: basic-validation
    if: needs.basic-validation.outputs.cron-changed == 'true' || needs.basic-validation.outputs.github-changed == 'true'
    uses: ./.github/workflows/validate-cron.yml

  # Job 5: Scripts validation
  validate-scripts:
    name: Scripts
    needs: basic-validation
    if: needs.basic-validation.outputs.scripts-changed == 'true' || needs.basic-validation.outputs.github-changed == 'true'
    uses: ./.github/workflows/validate-scripts.yml

  # Job 6: Integration testing
  integration-testing:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: [ validate-client, validate-server, validate-cron, validate-scripts ]
    steps:
      - name: Run integration tests
        run: |
          echo "=== Integration Testing ==="
          echo "Running integration tests..."
          echo "TODO: Implement integration testing"

  # Job 7: E2E testing
  e2e-testing:
    name: E2E Testing
    runs-on: ubuntu-latest
    needs: [ integration-testing ]
    steps:
      - name: Run E2E tests
        run: |
          echo "=== E2E Testing ==="
          echo "Running end-to-end tests..."
          echo "TODO: Implement E2E testing"

  # Job 8: Final validation and summary
  validation-summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [ basic-validation, validate-client, validate-server, validate-cron, validate-scripts, integration-testing, e2e-testing ]
    if: always()
    steps:
      - name: Check all validations
        run: |
          echo "=== Pull Request Validation Summary ==="
          echo "Basic validation: ${{ needs.basic-validation.result }}"
          echo "Client validation: ${{ needs.validate-client.result }}"
          echo "Server validation: ${{ needs.validate-server.result }}"
          echo "Cron validation: ${{ needs.validate-cron.result }}"
          echo "Scripts validation: ${{ needs.validate-scripts.result }}"
          echo "Integration testing: ${{ needs.integration-testing.result }}"
          echo "E2E testing: ${{ needs.e2e-testing.result }}"

          # Fail if any required job failed
          if [[ "${{ needs.basic-validation.result }}" == "failure" ]] || \
             [[ "${{ needs.validate-client.result }}" == "failure" ]] || \
             [[ "${{ needs.validate-server.result }}" == "failure" ]] || \
             [[ "${{ needs.validate-cron.result }}" == "failure" ]] || \
             [[ "${{ needs.validate-scripts.result }}" == "failure" ]] || \
             [[ "${{ needs.integration-testing.result }}" == "failure" ]] || \
             [[ "${{ needs.e2e-testing.result }}" == "failure" ]]; then
            echo "❌ One or more validations failed"
            exit 1
          else
            echo "✅ All validations passed"
          fi

      - name: Checkout repository
        if: always()
        uses: actions/checkout@v4

      - name: Comment on PR
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          # Generate the summary message
          echo "=== Generating PR Summary ==="
          SUMMARY_MESSAGE=$(bash ${{ github.workspace }}/scripts/ci/generate-pr-summary.sh \
            "${{ needs.basic-validation.result }}" \
            "${{ needs.validate-client.result }}" \
            "${{ needs.validate-server.result }}" \
            "${{ needs.validate-cron.result }}" \
            "${{ needs.validate-scripts.result }}" \
            "${{ needs.integration-testing.result }}" \
            "${{ needs.e2e-testing.result }}")

          # Post/update the comment
          echo "=== Posting PR Comment ==="
          COMMENT_ID="pull-request-validation-summary"
          bash ${{ github.workspace }}/scripts/ci/pr-comment.sh "$COMMENT_ID" "$SUMMARY_MESSAGE"
